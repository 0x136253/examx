package com.tew.pojo;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CheckExample implements Serializable {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SYS.PER_CHECK
     *
     * @mbg.generated 2019-11-09 22:33:41
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SYS.PER_CHECK
     *
     * @mbg.generated 2019-11-09 22:33:41
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SYS.PER_CHECK
     *
     * @mbg.generated 2019-11-09 22:33:41
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS.PER_CHECK
     *
     * @mbg.generated 2019-11-09 22:33:41
     */
    public CheckExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS.PER_CHECK
     *
     * @mbg.generated 2019-11-09 22:33:41
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS.PER_CHECK
     *
     * @mbg.generated 2019-11-09 22:33:41
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS.PER_CHECK
     *
     * @mbg.generated 2019-11-09 22:33:41
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS.PER_CHECK
     *
     * @mbg.generated 2019-11-09 22:33:41
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS.PER_CHECK
     *
     * @mbg.generated 2019-11-09 22:33:41
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS.PER_CHECK
     *
     * @mbg.generated 2019-11-09 22:33:41
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS.PER_CHECK
     *
     * @mbg.generated 2019-11-09 22:33:41
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS.PER_CHECK
     *
     * @mbg.generated 2019-11-09 22:33:41
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS.PER_CHECK
     *
     * @mbg.generated 2019-11-09 22:33:41
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS.PER_CHECK
     *
     * @mbg.generated 2019-11-09 22:33:41
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SYS.PER_CHECK
     *
     * @mbg.generated 2019-11-09 22:33:41
     */
    protected abstract static class GeneratedCriteria implements Serializable{
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("ID like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("ID not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andThemeidIsNull() {
            addCriterion("THEMEID is null");
            return (Criteria) this;
        }

        public Criteria andThemeidIsNotNull() {
            addCriterion("THEMEID is not null");
            return (Criteria) this;
        }

        public Criteria andThemeidEqualTo(Short value) {
            addCriterion("THEMEID =", value, "themeid");
            return (Criteria) this;
        }

        public Criteria andThemeidNotEqualTo(Short value) {
            addCriterion("THEMEID <>", value, "themeid");
            return (Criteria) this;
        }

        public Criteria andThemeidGreaterThan(Short value) {
            addCriterion("THEMEID >", value, "themeid");
            return (Criteria) this;
        }

        public Criteria andThemeidGreaterThanOrEqualTo(Short value) {
            addCriterion("THEMEID >=", value, "themeid");
            return (Criteria) this;
        }

        public Criteria andThemeidLessThan(Short value) {
            addCriterion("THEMEID <", value, "themeid");
            return (Criteria) this;
        }

        public Criteria andThemeidLessThanOrEqualTo(Short value) {
            addCriterion("THEMEID <=", value, "themeid");
            return (Criteria) this;
        }

        public Criteria andThemeidIn(List<Short> values) {
            addCriterion("THEMEID in", values, "themeid");
            return (Criteria) this;
        }

        public Criteria andThemeidNotIn(List<Short> values) {
            addCriterion("THEMEID not in", values, "themeid");
            return (Criteria) this;
        }

        public Criteria andThemeidBetween(Short value1, Short value2) {
            addCriterion("THEMEID between", value1, value2, "themeid");
            return (Criteria) this;
        }

        public Criteria andThemeidNotBetween(Short value1, Short value2) {
            addCriterion("THEMEID not between", value1, value2, "themeid");
            return (Criteria) this;
        }

        public Criteria andTrialInfoIsNull() {
            addCriterion("TRIAL_INFO is null");
            return (Criteria) this;
        }

        public Criteria andTrialInfoIsNotNull() {
            addCriterion("TRIAL_INFO is not null");
            return (Criteria) this;
        }

        public Criteria andTrialInfoEqualTo(Short value) {
            addCriterion("TRIAL_INFO =", value, "trialInfo");
            return (Criteria) this;
        }

        public Criteria andTrialInfoNotEqualTo(Short value) {
            addCriterion("TRIAL_INFO <>", value, "trialInfo");
            return (Criteria) this;
        }

        public Criteria andTrialInfoGreaterThan(Short value) {
            addCriterion("TRIAL_INFO >", value, "trialInfo");
            return (Criteria) this;
        }

        public Criteria andTrialInfoGreaterThanOrEqualTo(Short value) {
            addCriterion("TRIAL_INFO >=", value, "trialInfo");
            return (Criteria) this;
        }

        public Criteria andTrialInfoLessThan(Short value) {
            addCriterion("TRIAL_INFO <", value, "trialInfo");
            return (Criteria) this;
        }

        public Criteria andTrialInfoLessThanOrEqualTo(Short value) {
            addCriterion("TRIAL_INFO <=", value, "trialInfo");
            return (Criteria) this;
        }

        public Criteria andTrialInfoIn(List<Short> values) {
            addCriterion("TRIAL_INFO in", values, "trialInfo");
            return (Criteria) this;
        }

        public Criteria andTrialInfoNotIn(List<Short> values) {
            addCriterion("TRIAL_INFO not in", values, "trialInfo");
            return (Criteria) this;
        }

        public Criteria andTrialInfoBetween(Short value1, Short value2) {
            addCriterion("TRIAL_INFO between", value1, value2, "trialInfo");
            return (Criteria) this;
        }

        public Criteria andTrialInfoNotBetween(Short value1, Short value2) {
            addCriterion("TRIAL_INFO not between", value1, value2, "trialInfo");
            return (Criteria) this;
        }

        public Criteria andTrialWishIsNull() {
            addCriterion("TRIAL_WISH is null");
            return (Criteria) this;
        }

        public Criteria andTrialWishIsNotNull() {
            addCriterion("TRIAL_WISH is not null");
            return (Criteria) this;
        }

        public Criteria andTrialWishEqualTo(Short value) {
            addCriterion("TRIAL_WISH =", value, "trialWish");
            return (Criteria) this;
        }

        public Criteria andTrialWishNotEqualTo(Short value) {
            addCriterion("TRIAL_WISH <>", value, "trialWish");
            return (Criteria) this;
        }

        public Criteria andTrialWishGreaterThan(Short value) {
            addCriterion("TRIAL_WISH >", value, "trialWish");
            return (Criteria) this;
        }

        public Criteria andTrialWishGreaterThanOrEqualTo(Short value) {
            addCriterion("TRIAL_WISH >=", value, "trialWish");
            return (Criteria) this;
        }

        public Criteria andTrialWishLessThan(Short value) {
            addCriterion("TRIAL_WISH <", value, "trialWish");
            return (Criteria) this;
        }

        public Criteria andTrialWishLessThanOrEqualTo(Short value) {
            addCriterion("TRIAL_WISH <=", value, "trialWish");
            return (Criteria) this;
        }

        public Criteria andTrialWishIn(List<Short> values) {
            addCriterion("TRIAL_WISH in", values, "trialWish");
            return (Criteria) this;
        }

        public Criteria andTrialWishNotIn(List<Short> values) {
            addCriterion("TRIAL_WISH not in", values, "trialWish");
            return (Criteria) this;
        }

        public Criteria andTrialWishBetween(Short value1, Short value2) {
            addCriterion("TRIAL_WISH between", value1, value2, "trialWish");
            return (Criteria) this;
        }

        public Criteria andTrialWishNotBetween(Short value1, Short value2) {
            addCriterion("TRIAL_WISH not between", value1, value2, "trialWish");
            return (Criteria) this;
        }

        public Criteria andTrialResIsNull() {
            addCriterion("TRIAL_RES is null");
            return (Criteria) this;
        }

        public Criteria andTrialResIsNotNull() {
            addCriterion("TRIAL_RES is not null");
            return (Criteria) this;
        }

        public Criteria andTrialResEqualTo(Short value) {
            addCriterion("TRIAL_RES =", value, "trialRes");
            return (Criteria) this;
        }

        public Criteria andTrialResNotEqualTo(Short value) {
            addCriterion("TRIAL_RES <>", value, "trialRes");
            return (Criteria) this;
        }

        public Criteria andTrialResGreaterThan(Short value) {
            addCriterion("TRIAL_RES >", value, "trialRes");
            return (Criteria) this;
        }

        public Criteria andTrialResGreaterThanOrEqualTo(Short value) {
            addCriterion("TRIAL_RES >=", value, "trialRes");
            return (Criteria) this;
        }

        public Criteria andTrialResLessThan(Short value) {
            addCriterion("TRIAL_RES <", value, "trialRes");
            return (Criteria) this;
        }

        public Criteria andTrialResLessThanOrEqualTo(Short value) {
            addCriterion("TRIAL_RES <=", value, "trialRes");
            return (Criteria) this;
        }

        public Criteria andTrialResIn(List<Short> values) {
            addCriterion("TRIAL_RES in", values, "trialRes");
            return (Criteria) this;
        }

        public Criteria andTrialResNotIn(List<Short> values) {
            addCriterion("TRIAL_RES not in", values, "trialRes");
            return (Criteria) this;
        }

        public Criteria andTrialResBetween(Short value1, Short value2) {
            addCriterion("TRIAL_RES between", value1, value2, "trialRes");
            return (Criteria) this;
        }

        public Criteria andTrialResNotBetween(Short value1, Short value2) {
            addCriterion("TRIAL_RES not between", value1, value2, "trialRes");
            return (Criteria) this;
        }

        public Criteria andTrialNetIsNull() {
            addCriterion("TRIAL_NET is null");
            return (Criteria) this;
        }

        public Criteria andTrialNetIsNotNull() {
            addCriterion("TRIAL_NET is not null");
            return (Criteria) this;
        }

        public Criteria andTrialNetEqualTo(Short value) {
            addCriterion("TRIAL_NET =", value, "trialNet");
            return (Criteria) this;
        }

        public Criteria andTrialNetNotEqualTo(Short value) {
            addCriterion("TRIAL_NET <>", value, "trialNet");
            return (Criteria) this;
        }

        public Criteria andTrialNetGreaterThan(Short value) {
            addCriterion("TRIAL_NET >", value, "trialNet");
            return (Criteria) this;
        }

        public Criteria andTrialNetGreaterThanOrEqualTo(Short value) {
            addCriterion("TRIAL_NET >=", value, "trialNet");
            return (Criteria) this;
        }

        public Criteria andTrialNetLessThan(Short value) {
            addCriterion("TRIAL_NET <", value, "trialNet");
            return (Criteria) this;
        }

        public Criteria andTrialNetLessThanOrEqualTo(Short value) {
            addCriterion("TRIAL_NET <=", value, "trialNet");
            return (Criteria) this;
        }

        public Criteria andTrialNetIn(List<Short> values) {
            addCriterion("TRIAL_NET in", values, "trialNet");
            return (Criteria) this;
        }

        public Criteria andTrialNetNotIn(List<Short> values) {
            addCriterion("TRIAL_NET not in", values, "trialNet");
            return (Criteria) this;
        }

        public Criteria andTrialNetBetween(Short value1, Short value2) {
            addCriterion("TRIAL_NET between", value1, value2, "trialNet");
            return (Criteria) this;
        }

        public Criteria andTrialNetNotBetween(Short value1, Short value2) {
            addCriterion("TRIAL_NET not between", value1, value2, "trialNet");
            return (Criteria) this;
        }

        public Criteria andTrialMoneyIsNull() {
            addCriterion("TRIAL_MONEY is null");
            return (Criteria) this;
        }

        public Criteria andTrialMoneyIsNotNull() {
            addCriterion("TRIAL_MONEY is not null");
            return (Criteria) this;
        }

        public Criteria andTrialMoneyEqualTo(Short value) {
            addCriterion("TRIAL_MONEY =", value, "trialMoney");
            return (Criteria) this;
        }

        public Criteria andTrialMoneyNotEqualTo(Short value) {
            addCriterion("TRIAL_MONEY <>", value, "trialMoney");
            return (Criteria) this;
        }

        public Criteria andTrialMoneyGreaterThan(Short value) {
            addCriterion("TRIAL_MONEY >", value, "trialMoney");
            return (Criteria) this;
        }

        public Criteria andTrialMoneyGreaterThanOrEqualTo(Short value) {
            addCriterion("TRIAL_MONEY >=", value, "trialMoney");
            return (Criteria) this;
        }

        public Criteria andTrialMoneyLessThan(Short value) {
            addCriterion("TRIAL_MONEY <", value, "trialMoney");
            return (Criteria) this;
        }

        public Criteria andTrialMoneyLessThanOrEqualTo(Short value) {
            addCriterion("TRIAL_MONEY <=", value, "trialMoney");
            return (Criteria) this;
        }

        public Criteria andTrialMoneyIn(List<Short> values) {
            addCriterion("TRIAL_MONEY in", values, "trialMoney");
            return (Criteria) this;
        }

        public Criteria andTrialMoneyNotIn(List<Short> values) {
            addCriterion("TRIAL_MONEY not in", values, "trialMoney");
            return (Criteria) this;
        }

        public Criteria andTrialMoneyBetween(Short value1, Short value2) {
            addCriterion("TRIAL_MONEY between", value1, value2, "trialMoney");
            return (Criteria) this;
        }

        public Criteria andTrialMoneyNotBetween(Short value1, Short value2) {
            addCriterion("TRIAL_MONEY not between", value1, value2, "trialMoney");
            return (Criteria) this;
        }

        public Criteria andTrialMIsNull() {
            addCriterion("TRIAL_M is null");
            return (Criteria) this;
        }

        public Criteria andTrialMIsNotNull() {
            addCriterion("TRIAL_M is not null");
            return (Criteria) this;
        }

        public Criteria andTrialMEqualTo(Short value) {
            addCriterion("TRIAL_M =", value, "trialM");
            return (Criteria) this;
        }

        public Criteria andTrialMNotEqualTo(Short value) {
            addCriterion("TRIAL_M <>", value, "trialM");
            return (Criteria) this;
        }

        public Criteria andTrialMGreaterThan(Short value) {
            addCriterion("TRIAL_M >", value, "trialM");
            return (Criteria) this;
        }

        public Criteria andTrialMGreaterThanOrEqualTo(Short value) {
            addCriterion("TRIAL_M >=", value, "trialM");
            return (Criteria) this;
        }

        public Criteria andTrialMLessThan(Short value) {
            addCriterion("TRIAL_M <", value, "trialM");
            return (Criteria) this;
        }

        public Criteria andTrialMLessThanOrEqualTo(Short value) {
            addCriterion("TRIAL_M <=", value, "trialM");
            return (Criteria) this;
        }

        public Criteria andTrialMIn(List<Short> values) {
            addCriterion("TRIAL_M in", values, "trialM");
            return (Criteria) this;
        }

        public Criteria andTrialMNotIn(List<Short> values) {
            addCriterion("TRIAL_M not in", values, "trialM");
            return (Criteria) this;
        }

        public Criteria andTrialMBetween(Short value1, Short value2) {
            addCriterion("TRIAL_M between", value1, value2, "trialM");
            return (Criteria) this;
        }

        public Criteria andTrialMNotBetween(Short value1, Short value2) {
            addCriterion("TRIAL_M not between", value1, value2, "trialM");
            return (Criteria) this;
        }

        public Criteria andTrialWIsNull() {
            addCriterion("TRIAL_W is null");
            return (Criteria) this;
        }

        public Criteria andTrialWIsNotNull() {
            addCriterion("TRIAL_W is not null");
            return (Criteria) this;
        }

        public Criteria andTrialWEqualTo(Short value) {
            addCriterion("TRIAL_W =", value, "trialW");
            return (Criteria) this;
        }

        public Criteria andTrialWNotEqualTo(Short value) {
            addCriterion("TRIAL_W <>", value, "trialW");
            return (Criteria) this;
        }

        public Criteria andTrialWGreaterThan(Short value) {
            addCriterion("TRIAL_W >", value, "trialW");
            return (Criteria) this;
        }

        public Criteria andTrialWGreaterThanOrEqualTo(Short value) {
            addCriterion("TRIAL_W >=", value, "trialW");
            return (Criteria) this;
        }

        public Criteria andTrialWLessThan(Short value) {
            addCriterion("TRIAL_W <", value, "trialW");
            return (Criteria) this;
        }

        public Criteria andTrialWLessThanOrEqualTo(Short value) {
            addCriterion("TRIAL_W <=", value, "trialW");
            return (Criteria) this;
        }

        public Criteria andTrialWIn(List<Short> values) {
            addCriterion("TRIAL_W in", values, "trialW");
            return (Criteria) this;
        }

        public Criteria andTrialWNotIn(List<Short> values) {
            addCriterion("TRIAL_W not in", values, "trialW");
            return (Criteria) this;
        }

        public Criteria andTrialWBetween(Short value1, Short value2) {
            addCriterion("TRIAL_W between", value1, value2, "trialW");
            return (Criteria) this;
        }

        public Criteria andTrialWNotBetween(Short value1, Short value2) {
            addCriterion("TRIAL_W not between", value1, value2, "trialW");
            return (Criteria) this;
        }

        public Criteria andTrialIIsNull() {
            addCriterion("TRIAL_I is null");
            return (Criteria) this;
        }

        public Criteria andTrialIIsNotNull() {
            addCriterion("TRIAL_I is not null");
            return (Criteria) this;
        }

        public Criteria andTrialIEqualTo(Short value) {
            addCriterion("TRIAL_I =", value, "trialI");
            return (Criteria) this;
        }

        public Criteria andTrialINotEqualTo(Short value) {
            addCriterion("TRIAL_I <>", value, "trialI");
            return (Criteria) this;
        }

        public Criteria andTrialIGreaterThan(Short value) {
            addCriterion("TRIAL_I >", value, "trialI");
            return (Criteria) this;
        }

        public Criteria andTrialIGreaterThanOrEqualTo(Short value) {
            addCriterion("TRIAL_I >=", value, "trialI");
            return (Criteria) this;
        }

        public Criteria andTrialILessThan(Short value) {
            addCriterion("TRIAL_I <", value, "trialI");
            return (Criteria) this;
        }

        public Criteria andTrialILessThanOrEqualTo(Short value) {
            addCriterion("TRIAL_I <=", value, "trialI");
            return (Criteria) this;
        }

        public Criteria andTrialIIn(List<Short> values) {
            addCriterion("TRIAL_I in", values, "trialI");
            return (Criteria) this;
        }

        public Criteria andTrialINotIn(List<Short> values) {
            addCriterion("TRIAL_I not in", values, "trialI");
            return (Criteria) this;
        }

        public Criteria andTrialIBetween(Short value1, Short value2) {
            addCriterion("TRIAL_I between", value1, value2, "trialI");
            return (Criteria) this;
        }

        public Criteria andTrialINotBetween(Short value1, Short value2) {
            addCriterion("TRIAL_I not between", value1, value2, "trialI");
            return (Criteria) this;
        }

        public Criteria andTrialHIsNull() {
            addCriterion("TRIAL_H is null");
            return (Criteria) this;
        }

        public Criteria andTrialHIsNotNull() {
            addCriterion("TRIAL_H is not null");
            return (Criteria) this;
        }

        public Criteria andTrialHEqualTo(Short value) {
            addCriterion("TRIAL_H =", value, "trialH");
            return (Criteria) this;
        }

        public Criteria andTrialHNotEqualTo(Short value) {
            addCriterion("TRIAL_H <>", value, "trialH");
            return (Criteria) this;
        }

        public Criteria andTrialHGreaterThan(Short value) {
            addCriterion("TRIAL_H >", value, "trialH");
            return (Criteria) this;
        }

        public Criteria andTrialHGreaterThanOrEqualTo(Short value) {
            addCriterion("TRIAL_H >=", value, "trialH");
            return (Criteria) this;
        }

        public Criteria andTrialHLessThan(Short value) {
            addCriterion("TRIAL_H <", value, "trialH");
            return (Criteria) this;
        }

        public Criteria andTrialHLessThanOrEqualTo(Short value) {
            addCriterion("TRIAL_H <=", value, "trialH");
            return (Criteria) this;
        }

        public Criteria andTrialHIn(List<Short> values) {
            addCriterion("TRIAL_H in", values, "trialH");
            return (Criteria) this;
        }

        public Criteria andTrialHNotIn(List<Short> values) {
            addCriterion("TRIAL_H not in", values, "trialH");
            return (Criteria) this;
        }

        public Criteria andTrialHBetween(Short value1, Short value2) {
            addCriterion("TRIAL_H between", value1, value2, "trialH");
            return (Criteria) this;
        }

        public Criteria andTrialHNotBetween(Short value1, Short value2) {
            addCriterion("TRIAL_H not between", value1, value2, "trialH");
            return (Criteria) this;
        }

        public Criteria andTrialPIsNull() {
            addCriterion("TRIAL_P is null");
            return (Criteria) this;
        }

        public Criteria andTrialPIsNotNull() {
            addCriterion("TRIAL_P is not null");
            return (Criteria) this;
        }

        public Criteria andTrialPEqualTo(Short value) {
            addCriterion("TRIAL_P =", value, "trialP");
            return (Criteria) this;
        }

        public Criteria andTrialPNotEqualTo(Short value) {
            addCriterion("TRIAL_P <>", value, "trialP");
            return (Criteria) this;
        }

        public Criteria andTrialPGreaterThan(Short value) {
            addCriterion("TRIAL_P >", value, "trialP");
            return (Criteria) this;
        }

        public Criteria andTrialPGreaterThanOrEqualTo(Short value) {
            addCriterion("TRIAL_P >=", value, "trialP");
            return (Criteria) this;
        }

        public Criteria andTrialPLessThan(Short value) {
            addCriterion("TRIAL_P <", value, "trialP");
            return (Criteria) this;
        }

        public Criteria andTrialPLessThanOrEqualTo(Short value) {
            addCriterion("TRIAL_P <=", value, "trialP");
            return (Criteria) this;
        }

        public Criteria andTrialPIn(List<Short> values) {
            addCriterion("TRIAL_P in", values, "trialP");
            return (Criteria) this;
        }

        public Criteria andTrialPNotIn(List<Short> values) {
            addCriterion("TRIAL_P not in", values, "trialP");
            return (Criteria) this;
        }

        public Criteria andTrialPBetween(Short value1, Short value2) {
            addCriterion("TRIAL_P between", value1, value2, "trialP");
            return (Criteria) this;
        }

        public Criteria andTrialPNotBetween(Short value1, Short value2) {
            addCriterion("TRIAL_P not between", value1, value2, "trialP");
            return (Criteria) this;
        }

        public Criteria andTrialEIsNull() {
            addCriterion("TRIAL_E is null");
            return (Criteria) this;
        }

        public Criteria andTrialEIsNotNull() {
            addCriterion("TRIAL_E is not null");
            return (Criteria) this;
        }

        public Criteria andTrialEEqualTo(Short value) {
            addCriterion("TRIAL_E =", value, "trialE");
            return (Criteria) this;
        }

        public Criteria andTrialENotEqualTo(Short value) {
            addCriterion("TRIAL_E <>", value, "trialE");
            return (Criteria) this;
        }

        public Criteria andTrialEGreaterThan(Short value) {
            addCriterion("TRIAL_E >", value, "trialE");
            return (Criteria) this;
        }

        public Criteria andTrialEGreaterThanOrEqualTo(Short value) {
            addCriterion("TRIAL_E >=", value, "trialE");
            return (Criteria) this;
        }

        public Criteria andTrialELessThan(Short value) {
            addCriterion("TRIAL_E <", value, "trialE");
            return (Criteria) this;
        }

        public Criteria andTrialELessThanOrEqualTo(Short value) {
            addCriterion("TRIAL_E <=", value, "trialE");
            return (Criteria) this;
        }

        public Criteria andTrialEIn(List<Short> values) {
            addCriterion("TRIAL_E in", values, "trialE");
            return (Criteria) this;
        }

        public Criteria andTrialENotIn(List<Short> values) {
            addCriterion("TRIAL_E not in", values, "trialE");
            return (Criteria) this;
        }

        public Criteria andTrialEBetween(Short value1, Short value2) {
            addCriterion("TRIAL_E between", value1, value2, "trialE");
            return (Criteria) this;
        }

        public Criteria andTrialENotBetween(Short value1, Short value2) {
            addCriterion("TRIAL_E not between", value1, value2, "trialE");
            return (Criteria) this;
        }

        public Criteria andWriteExamIsNull() {
            addCriterion("WRITE_EXAM is null");
            return (Criteria) this;
        }

        public Criteria andWriteExamIsNotNull() {
            addCriterion("WRITE_EXAM is not null");
            return (Criteria) this;
        }

        public Criteria andWriteExamEqualTo(BigDecimal value) {
            addCriterion("WRITE_EXAM =", value, "writeExam");
            return (Criteria) this;
        }

        public Criteria andWriteExamNotEqualTo(BigDecimal value) {
            addCriterion("WRITE_EXAM <>", value, "writeExam");
            return (Criteria) this;
        }

        public Criteria andWriteExamGreaterThan(BigDecimal value) {
            addCriterion("WRITE_EXAM >", value, "writeExam");
            return (Criteria) this;
        }

        public Criteria andWriteExamGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("WRITE_EXAM >=", value, "writeExam");
            return (Criteria) this;
        }

        public Criteria andWriteExamLessThan(BigDecimal value) {
            addCriterion("WRITE_EXAM <", value, "writeExam");
            return (Criteria) this;
        }

        public Criteria andWriteExamLessThanOrEqualTo(BigDecimal value) {
            addCriterion("WRITE_EXAM <=", value, "writeExam");
            return (Criteria) this;
        }

        public Criteria andWriteExamIn(List<BigDecimal> values) {
            addCriterion("WRITE_EXAM in", values, "writeExam");
            return (Criteria) this;
        }

        public Criteria andWriteExamNotIn(List<BigDecimal> values) {
            addCriterion("WRITE_EXAM not in", values, "writeExam");
            return (Criteria) this;
        }

        public Criteria andWriteExamBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("WRITE_EXAM between", value1, value2, "writeExam");
            return (Criteria) this;
        }

        public Criteria andWriteExamNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("WRITE_EXAM not between", value1, value2, "writeExam");
            return (Criteria) this;
        }

        public Criteria andInterExamIsNull() {
            addCriterion("INTER_EXAM is null");
            return (Criteria) this;
        }

        public Criteria andInterExamIsNotNull() {
            addCriterion("INTER_EXAM is not null");
            return (Criteria) this;
        }

        public Criteria andInterExamEqualTo(BigDecimal value) {
            addCriterion("INTER_EXAM =", value, "interExam");
            return (Criteria) this;
        }

        public Criteria andInterExamNotEqualTo(BigDecimal value) {
            addCriterion("INTER_EXAM <>", value, "interExam");
            return (Criteria) this;
        }

        public Criteria andInterExamGreaterThan(BigDecimal value) {
            addCriterion("INTER_EXAM >", value, "interExam");
            return (Criteria) this;
        }

        public Criteria andInterExamGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("INTER_EXAM >=", value, "interExam");
            return (Criteria) this;
        }

        public Criteria andInterExamLessThan(BigDecimal value) {
            addCriterion("INTER_EXAM <", value, "interExam");
            return (Criteria) this;
        }

        public Criteria andInterExamLessThanOrEqualTo(BigDecimal value) {
            addCriterion("INTER_EXAM <=", value, "interExam");
            return (Criteria) this;
        }

        public Criteria andInterExamIn(List<BigDecimal> values) {
            addCriterion("INTER_EXAM in", values, "interExam");
            return (Criteria) this;
        }

        public Criteria andInterExamNotIn(List<BigDecimal> values) {
            addCriterion("INTER_EXAM not in", values, "interExam");
            return (Criteria) this;
        }

        public Criteria andInterExamBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("INTER_EXAM between", value1, value2, "interExam");
            return (Criteria) this;
        }

        public Criteria andInterExamNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("INTER_EXAM not between", value1, value2, "interExam");
            return (Criteria) this;
        }

        public Criteria andScoreIsNull() {
            addCriterion("SCORE is null");
            return (Criteria) this;
        }

        public Criteria andScoreIsNotNull() {
            addCriterion("SCORE is not null");
            return (Criteria) this;
        }

        public Criteria andScoreEqualTo(BigDecimal value) {
            addCriterion("SCORE =", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreNotEqualTo(BigDecimal value) {
            addCriterion("SCORE <>", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreGreaterThan(BigDecimal value) {
            addCriterion("SCORE >", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("SCORE >=", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreLessThan(BigDecimal value) {
            addCriterion("SCORE <", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreLessThanOrEqualTo(BigDecimal value) {
            addCriterion("SCORE <=", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreIn(List<BigDecimal> values) {
            addCriterion("SCORE in", values, "score");
            return (Criteria) this;
        }

        public Criteria andScoreNotIn(List<BigDecimal> values) {
            addCriterion("SCORE not in", values, "score");
            return (Criteria) this;
        }

        public Criteria andScoreBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SCORE between", value1, value2, "score");
            return (Criteria) this;
        }

        public Criteria andScoreNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SCORE not between", value1, value2, "score");
            return (Criteria) this;
        }

        public Criteria andCreateAtIsNull() {
            addCriterion("CREATE_AT is null");
            return (Criteria) this;
        }

        public Criteria andCreateAtIsNotNull() {
            addCriterion("CREATE_AT is not null");
            return (Criteria) this;
        }

        public Criteria andCreateAtEqualTo(Date value) {
            addCriterion("CREATE_AT =", value, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtNotEqualTo(Date value) {
            addCriterion("CREATE_AT <>", value, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtGreaterThan(Date value) {
            addCriterion("CREATE_AT >", value, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtGreaterThanOrEqualTo(Date value) {
            addCriterion("CREATE_AT >=", value, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtLessThan(Date value) {
            addCriterion("CREATE_AT <", value, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtLessThanOrEqualTo(Date value) {
            addCriterion("CREATE_AT <=", value, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtIn(List<Date> values) {
            addCriterion("CREATE_AT in", values, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtNotIn(List<Date> values) {
            addCriterion("CREATE_AT not in", values, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtBetween(Date value1, Date value2) {
            addCriterion("CREATE_AT between", value1, value2, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtNotBetween(Date value1, Date value2) {
            addCriterion("CREATE_AT not between", value1, value2, "createAt");
            return (Criteria) this;
        }

        public Criteria andTrialGIsNull() {
            addCriterion("TRIAL_G is null");
            return (Criteria) this;
        }

        public Criteria andTrialGIsNotNull() {
            addCriterion("TRIAL_G is not null");
            return (Criteria) this;
        }

        public Criteria andTrialGEqualTo(Short value) {
            addCriterion("TRIAL_G =", value, "trialG");
            return (Criteria) this;
        }

        public Criteria andTrialGNotEqualTo(Short value) {
            addCriterion("TRIAL_G <>", value, "trialG");
            return (Criteria) this;
        }

        public Criteria andTrialGGreaterThan(Short value) {
            addCriterion("TRIAL_G >", value, "trialG");
            return (Criteria) this;
        }

        public Criteria andTrialGGreaterThanOrEqualTo(Short value) {
            addCriterion("TRIAL_G >=", value, "trialG");
            return (Criteria) this;
        }

        public Criteria andTrialGLessThan(Short value) {
            addCriterion("TRIAL_G <", value, "trialG");
            return (Criteria) this;
        }

        public Criteria andTrialGLessThanOrEqualTo(Short value) {
            addCriterion("TRIAL_G <=", value, "trialG");
            return (Criteria) this;
        }

        public Criteria andTrialGIn(List<Short> values) {
            addCriterion("TRIAL_G in", values, "trialG");
            return (Criteria) this;
        }

        public Criteria andTrialGNotIn(List<Short> values) {
            addCriterion("TRIAL_G not in", values, "trialG");
            return (Criteria) this;
        }

        public Criteria andTrialGBetween(Short value1, Short value2) {
            addCriterion("TRIAL_G between", value1, value2, "trialG");
            return (Criteria) this;
        }

        public Criteria andTrialGNotBetween(Short value1, Short value2) {
            addCriterion("TRIAL_G not between", value1, value2, "trialG");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SYS.PER_CHECK
     *
     * @mbg.generated do_not_delete_during_merge 2019-11-09 22:33:41
     */
    public static class Criteria extends GeneratedCriteria implements Serializable{

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SYS.PER_CHECK
     *
     * @mbg.generated 2019-11-09 22:33:41
     */
    public static class Criterion implements Serializable{
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}