package com.tew.pojo;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class WishExample implements Serializable {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SYS.WISH_INFO
     *
     * @mbg.generated 2019-08-31 09:33:07
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SYS.WISH_INFO
     *
     * @mbg.generated 2019-08-31 09:33:07
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SYS.WISH_INFO
     *
     * @mbg.generated 2019-08-31 09:33:07
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS.WISH_INFO
     *
     * @mbg.generated 2019-08-31 09:33:07
     */
    public WishExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS.WISH_INFO
     *
     * @mbg.generated 2019-08-31 09:33:07
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS.WISH_INFO
     *
     * @mbg.generated 2019-08-31 09:33:07
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS.WISH_INFO
     *
     * @mbg.generated 2019-08-31 09:33:07
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS.WISH_INFO
     *
     * @mbg.generated 2019-08-31 09:33:07
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS.WISH_INFO
     *
     * @mbg.generated 2019-08-31 09:33:07
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS.WISH_INFO
     *
     * @mbg.generated 2019-08-31 09:33:07
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS.WISH_INFO
     *
     * @mbg.generated 2019-08-31 09:33:07
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS.WISH_INFO
     *
     * @mbg.generated 2019-08-31 09:33:07
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS.WISH_INFO
     *
     * @mbg.generated 2019-08-31 09:33:07
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS.WISH_INFO
     *
     * @mbg.generated 2019-08-31 09:33:07
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SYS.WISH_INFO
     *
     * @mbg.generated 2019-08-31 09:33:07
     */
    protected abstract static class GeneratedCriteria implements Serializable {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andWishidIsNull() {
            addCriterion("WISHID is null");
            return (Criteria) this;
        }

        public Criteria andWishidIsNotNull() {
            addCriterion("WISHID is not null");
            return (Criteria) this;
        }

        public Criteria andWishidEqualTo(Short value) {
            addCriterion("WISHID =", value, "wishid");
            return (Criteria) this;
        }

        public Criteria andWishidNotEqualTo(Short value) {
            addCriterion("WISHID <>", value, "wishid");
            return (Criteria) this;
        }

        public Criteria andWishidGreaterThan(Short value) {
            addCriterion("WISHID >", value, "wishid");
            return (Criteria) this;
        }

        public Criteria andWishidGreaterThanOrEqualTo(Short value) {
            addCriterion("WISHID >=", value, "wishid");
            return (Criteria) this;
        }

        public Criteria andWishidLessThan(Short value) {
            addCriterion("WISHID <", value, "wishid");
            return (Criteria) this;
        }

        public Criteria andWishidLessThanOrEqualTo(Short value) {
            addCriterion("WISHID <=", value, "wishid");
            return (Criteria) this;
        }

        public Criteria andWishidIn(List<Short> values) {
            addCriterion("WISHID in", values, "wishid");
            return (Criteria) this;
        }

        public Criteria andWishidNotIn(List<Short> values) {
            addCriterion("WISHID not in", values, "wishid");
            return (Criteria) this;
        }

        public Criteria andWishidBetween(Short value1, Short value2) {
            addCriterion("WISHID between", value1, value2, "wishid");
            return (Criteria) this;
        }

        public Criteria andWishidNotBetween(Short value1, Short value2) {
            addCriterion("WISHID not between", value1, value2, "wishid");
            return (Criteria) this;
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("ID like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("ID not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andSchoolNameIsNull() {
            addCriterion("SCHOOL_NAME is null");
            return (Criteria) this;
        }

        public Criteria andSchoolNameIsNotNull() {
            addCriterion("SCHOOL_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andSchoolNameEqualTo(String value) {
            addCriterion("SCHOOL_NAME =", value, "schoolName");
            return (Criteria) this;
        }

        public Criteria andSchoolNameNotEqualTo(String value) {
            addCriterion("SCHOOL_NAME <>", value, "schoolName");
            return (Criteria) this;
        }

        public Criteria andSchoolNameGreaterThan(String value) {
            addCriterion("SCHOOL_NAME >", value, "schoolName");
            return (Criteria) this;
        }

        public Criteria andSchoolNameGreaterThanOrEqualTo(String value) {
            addCriterion("SCHOOL_NAME >=", value, "schoolName");
            return (Criteria) this;
        }

        public Criteria andSchoolNameLessThan(String value) {
            addCriterion("SCHOOL_NAME <", value, "schoolName");
            return (Criteria) this;
        }

        public Criteria andSchoolNameLessThanOrEqualTo(String value) {
            addCriterion("SCHOOL_NAME <=", value, "schoolName");
            return (Criteria) this;
        }

        public Criteria andSchoolNameLike(String value) {
            addCriterion("SCHOOL_NAME like", value, "schoolName");
            return (Criteria) this;
        }

        public Criteria andSchoolNameNotLike(String value) {
            addCriterion("SCHOOL_NAME not like", value, "schoolName");
            return (Criteria) this;
        }

        public Criteria andSchoolNameIn(List<String> values) {
            addCriterion("SCHOOL_NAME in", values, "schoolName");
            return (Criteria) this;
        }

        public Criteria andSchoolNameNotIn(List<String> values) {
            addCriterion("SCHOOL_NAME not in", values, "schoolName");
            return (Criteria) this;
        }

        public Criteria andSchoolNameBetween(String value1, String value2) {
            addCriterion("SCHOOL_NAME between", value1, value2, "schoolName");
            return (Criteria) this;
        }

        public Criteria andSchoolNameNotBetween(String value1, String value2) {
            addCriterion("SCHOOL_NAME not between", value1, value2, "schoolName");
            return (Criteria) this;
        }

        public Criteria andSchoolidIsNull() {
            addCriterion("SCHOOLID is null");
            return (Criteria) this;
        }

        public Criteria andSchoolidIsNotNull() {
            addCriterion("SCHOOLID is not null");
            return (Criteria) this;
        }

        public Criteria andSchoolidEqualTo(Short value) {
            addCriterion("SCHOOLID =", value, "schoolid");
            return (Criteria) this;
        }

        public Criteria andSchoolidNotEqualTo(Short value) {
            addCriterion("SCHOOLID <>", value, "schoolid");
            return (Criteria) this;
        }

        public Criteria andSchoolidGreaterThan(Short value) {
            addCriterion("SCHOOLID >", value, "schoolid");
            return (Criteria) this;
        }

        public Criteria andSchoolidGreaterThanOrEqualTo(Short value) {
            addCriterion("SCHOOLID >=", value, "schoolid");
            return (Criteria) this;
        }

        public Criteria andSchoolidLessThan(Short value) {
            addCriterion("SCHOOLID <", value, "schoolid");
            return (Criteria) this;
        }

        public Criteria andSchoolidLessThanOrEqualTo(Short value) {
            addCriterion("SCHOOLID <=", value, "schoolid");
            return (Criteria) this;
        }

        public Criteria andSchoolidIn(List<Short> values) {
            addCriterion("SCHOOLID in", values, "schoolid");
            return (Criteria) this;
        }

        public Criteria andSchoolidNotIn(List<Short> values) {
            addCriterion("SCHOOLID not in", values, "schoolid");
            return (Criteria) this;
        }

        public Criteria andSchoolidBetween(Short value1, Short value2) {
            addCriterion("SCHOOLID between", value1, value2, "schoolid");
            return (Criteria) this;
        }

        public Criteria andSchoolidNotBetween(Short value1, Short value2) {
            addCriterion("SCHOOLID not between", value1, value2, "schoolid");
            return (Criteria) this;
        }

        public Criteria andPostIsNull() {
            addCriterion("POST is null");
            return (Criteria) this;
        }

        public Criteria andPostIsNotNull() {
            addCriterion("POST is not null");
            return (Criteria) this;
        }

        public Criteria andPostEqualTo(String value) {
            addCriterion("POST =", value, "post");
            return (Criteria) this;
        }

        public Criteria andPostNotEqualTo(String value) {
            addCriterion("POST <>", value, "post");
            return (Criteria) this;
        }

        public Criteria andPostGreaterThan(String value) {
            addCriterion("POST >", value, "post");
            return (Criteria) this;
        }

        public Criteria andPostGreaterThanOrEqualTo(String value) {
            addCriterion("POST >=", value, "post");
            return (Criteria) this;
        }

        public Criteria andPostLessThan(String value) {
            addCriterion("POST <", value, "post");
            return (Criteria) this;
        }

        public Criteria andPostLessThanOrEqualTo(String value) {
            addCriterion("POST <=", value, "post");
            return (Criteria) this;
        }

        public Criteria andPostLike(String value) {
            addCriterion("POST like", value, "post");
            return (Criteria) this;
        }

        public Criteria andPostNotLike(String value) {
            addCriterion("POST not like", value, "post");
            return (Criteria) this;
        }

        public Criteria andPostIn(List<String> values) {
            addCriterion("POST in", values, "post");
            return (Criteria) this;
        }

        public Criteria andPostNotIn(List<String> values) {
            addCriterion("POST not in", values, "post");
            return (Criteria) this;
        }

        public Criteria andPostBetween(String value1, String value2) {
            addCriterion("POST between", value1, value2, "post");
            return (Criteria) this;
        }

        public Criteria andPostNotBetween(String value1, String value2) {
            addCriterion("POST not between", value1, value2, "post");
            return (Criteria) this;
        }

        public Criteria andPostidIsNull() {
            addCriterion("POSTID is null");
            return (Criteria) this;
        }

        public Criteria andPostidIsNotNull() {
            addCriterion("POSTID is not null");
            return (Criteria) this;
        }

        public Criteria andPostidEqualTo(Short value) {
            addCriterion("POSTID =", value, "postid");
            return (Criteria) this;
        }

        public Criteria andPostidNotEqualTo(Short value) {
            addCriterion("POSTID <>", value, "postid");
            return (Criteria) this;
        }

        public Criteria andPostidGreaterThan(Short value) {
            addCriterion("POSTID >", value, "postid");
            return (Criteria) this;
        }

        public Criteria andPostidGreaterThanOrEqualTo(Short value) {
            addCriterion("POSTID >=", value, "postid");
            return (Criteria) this;
        }

        public Criteria andPostidLessThan(Short value) {
            addCriterion("POSTID <", value, "postid");
            return (Criteria) this;
        }

        public Criteria andPostidLessThanOrEqualTo(Short value) {
            addCriterion("POSTID <=", value, "postid");
            return (Criteria) this;
        }

        public Criteria andPostidIn(List<Short> values) {
            addCriterion("POSTID in", values, "postid");
            return (Criteria) this;
        }

        public Criteria andPostidNotIn(List<Short> values) {
            addCriterion("POSTID not in", values, "postid");
            return (Criteria) this;
        }

        public Criteria andPostidBetween(Short value1, Short value2) {
            addCriterion("POSTID between", value1, value2, "postid");
            return (Criteria) this;
        }

        public Criteria andPostidNotBetween(Short value1, Short value2) {
            addCriterion("POSTID not between", value1, value2, "postid");
            return (Criteria) this;
        }

        public Criteria andCreateAtIsNull() {
            addCriterion("CREATE_AT is null");
            return (Criteria) this;
        }

        public Criteria andCreateAtIsNotNull() {
            addCriterion("CREATE_AT is not null");
            return (Criteria) this;
        }

        public Criteria andCreateAtEqualTo(Date value) {
            addCriterion("CREATE_AT =", value, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtNotEqualTo(Date value) {
            addCriterion("CREATE_AT <>", value, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtGreaterThan(Date value) {
            addCriterion("CREATE_AT >", value, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtGreaterThanOrEqualTo(Date value) {
            addCriterion("CREATE_AT >=", value, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtLessThan(Date value) {
            addCriterion("CREATE_AT <", value, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtLessThanOrEqualTo(Date value) {
            addCriterion("CREATE_AT <=", value, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtIn(List<Date> values) {
            addCriterion("CREATE_AT in", values, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtNotIn(List<Date> values) {
            addCriterion("CREATE_AT not in", values, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtBetween(Date value1, Date value2) {
            addCriterion("CREATE_AT between", value1, value2, "createAt");
            return (Criteria) this;
        }

        public Criteria andCreateAtNotBetween(Date value1, Date value2) {
            addCriterion("CREATE_AT not between", value1, value2, "createAt");
            return (Criteria) this;
        }

        public Criteria andThemeidIsNull() {
            addCriterion("THEMEID is null");
            return (Criteria) this;
        }

        public Criteria andThemeidIsNotNull() {
            addCriterion("THEMEID is not null");
            return (Criteria) this;
        }

        public Criteria andThemeidEqualTo(Short value) {
            addCriterion("THEMEID =", value, "themeid");
            return (Criteria) this;
        }

        public Criteria andThemeidNotEqualTo(Short value) {
            addCriterion("THEMEID <>", value, "themeid");
            return (Criteria) this;
        }

        public Criteria andThemeidGreaterThan(Short value) {
            addCriterion("THEMEID >", value, "themeid");
            return (Criteria) this;
        }

        public Criteria andThemeidGreaterThanOrEqualTo(Short value) {
            addCriterion("THEMEID >=", value, "themeid");
            return (Criteria) this;
        }

        public Criteria andThemeidLessThan(Short value) {
            addCriterion("THEMEID <", value, "themeid");
            return (Criteria) this;
        }

        public Criteria andThemeidLessThanOrEqualTo(Short value) {
            addCriterion("THEMEID <=", value, "themeid");
            return (Criteria) this;
        }

        public Criteria andThemeidIn(List<Short> values) {
            addCriterion("THEMEID in", values, "themeid");
            return (Criteria) this;
        }

        public Criteria andThemeidNotIn(List<Short> values) {
            addCriterion("THEMEID not in", values, "themeid");
            return (Criteria) this;
        }

        public Criteria andThemeidBetween(Short value1, Short value2) {
            addCriterion("THEMEID between", value1, value2, "themeid");
            return (Criteria) this;
        }

        public Criteria andThemeidNotBetween(Short value1, Short value2) {
            addCriterion("THEMEID not between", value1, value2, "themeid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SYS.WISH_INFO
     *
     * @mbg.generated do_not_delete_during_merge 2019-08-31 09:33:07
     */
    public static class Criteria extends GeneratedCriteria implements Serializable {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SYS.WISH_INFO
     *
     * @mbg.generated 2019-08-31 09:33:07
     */
    public static class Criterion implements Serializable {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}